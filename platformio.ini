; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; Show computed configuration: CTRL+SHIFT+P > PlatformIO: New Terminal
; > pio project config

[platformio]
default_envs = HT_LoRa32V2
name = Globule-Vert
description = io-homecontrol for the ESP32
data_dir = ./data

; Global data for all [env:***]
[env]
framework = arduino
platform = espressif32
platform_packages = framework-arduinoespressif32
; platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#idf-release/v5.1 ; Use latest ... does not work

; --- MONITOR/DEBUG SETTINGS ---
check_tool = cppcheck, clangtidy
check_skip_packages = yes
targets = upload, monitor
upload_protocol = esptool
upload_speed = 921600
monitor_speed = 115200
monitor_echo = true
monitor_filters = esp32_exception_decoder, send_on_enter, time, colorize

; --- BUILD SETTINGS ---
lib_ldf_mode = deep
lib_deps = 
  bblanchon/ArduinoJson@^6.21.0
  jgromes/RadioLib@^6.5.0
  https://github.com/HeMan/async-mqtt-client.git
board_build.filesystem = littlefs
build_unflags =
  -std=gnu++11   ; required to unset gnu++11, for map lib to use "insert_or_assign()"
  -Os
build_flags = 
  -I include
  -std=gnu++2a   ; required (>gnu++17) for map lib to use "insert_or_assign()"
  -O2
  -DWM_MDNS
  -DCONFIG_ESP_WIFI_TASK_PINNED_TO_CORE_1=y
  -DCONFIG_ESP_TIMER_PROFILING=y
  -DCONFIG_ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD=y ; To see if it work with MQTT and WIFI. Can set callback in IRAM
  -DCONFIG_COMPILER_OPTIMIZATION_PERF=y


; Custom debug group can be use in [env:***] via ${debug.***}
[env:debug]
build_type = debug
; Set optimization level and amount of debug info generated by the compiler
debug_build_flags = -O0 -ggdb3 -g3


[env:HT_LoRa32V2]
board = heltec_wifi_lora_32_V2
build_flags = 
  ${env.build_flags}
  -DHELTEC


[env:TT_LoRa32V21]
board = ttgo-lora32-v21
build_flags = 
  ${env.build_flags}
  -DLILYGO
